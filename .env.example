# Django Settings
# ------------------------------------------------------------------------------
# SECURITY WARNING: keep the secret key used in production secret!
# Generate a new secret key for your production environment.
SECRET_KEY=your_django_secret_key_here
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG=True

# LLM API Keys
# ------------------------------------------------------------------------------
# Replace with your actual Gemini API Key for LLM operations
GEMINI_API_KEY=your_gemini_api_key_here
# Specify the LLM model to be used (e.g., gemini/gemini-pro, gpt-3.5-turbo, etc.)
LLM_MODEL_NAME=gemini/gemini-pro

# File Storage Configuration
# ------------------------------------------------------------------------------
# Choose one storage backend (local, gcs, or s3) and configure accordingly.
# Comment out or remove sections for backends you are not using.

# --- Local Storage (Default if no other backend is configured in settings.py) ---
# MEDIA_URL=/media/
# MEDIA_ROOT=./mediafiles/ # Example: relative to project root

# --- Google Cloud Storage (GCS) ---
# DEFAULT_FILE_STORAGE=storages.backends.gcloud.GoogleCloudStorage # Uncomment in settings.py to activate
GS_BUCKET_NAME=your_gcs_bucket_name
GS_PROJECT_ID=your_gcs_project_id
# Path to your GCS service account JSON key file.
# Example: GS_CREDENTIALS_PATH=/path/to/your/gcs-service-account-key.json
# Create this variable if you are using GCS and plan to load credentials from a file path.
GS_CREDENTIALS_PATH=

# --- AWS S3 ---
# DEFAULT_FILE_STORAGE=storages.backends.s3boto3.S3Boto3Storage # Uncomment in settings.py to activate
AWS_ACCESS_KEY_ID=your_aws_access_key_id
AWS_SECRET_ACCESS_KEY=your_aws_secret_access_key
AWS_STORAGE_BUCKET_NAME=your_aws_s3_bucket_name
AWS_S3_REGION_NAME=your_aws_s3_region_name # e.g., us-east-1
# Optional S3 settings:
# AWS_S3_ENDPOINT_URL= # e.g., https://s3.your_region.amazonaws.com or for MinIO
# AWS_S3_CUSTOM_DOMAIN= # e.g., your_cdn.com
# AWS_LOCATION= # Subdirectory within the bucket e.g., static
# AWS_S3_FILE_OVERWRITE=False

# Database Configuration (Example for PostgreSQL)
# ------------------------------------------------------------------------------
# DB_ENGINE=django.db.backends.postgresql
# DB_NAME=your_db_name
# DB_USER=your_db_user
# DB_PASSWORD=your_db_password
# DB_HOST=localhost
# DB_PORT=5432
